{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer, useEffect } from \"react\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"LOADING\":\n      return {\n        loading: true,\n        data: null,\n        error: null\n      };\n\n    case \"SUCCESS\":\n      return {\n        loading: false,\n        data: action.data,\n        error: null\n      };\n\n    case \"ERROR\":\n      return {\n        loading: false,\n        data: null,\n        error: action.error\n      };\n\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nfunction useAsync(callback) {\n  _s();\n\n  let deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const [state, dispatch] = useReducer(reducer, {\n    loading: false,\n    data: null,\n    error: false\n  });\n\n  const fetchData = async () => {\n    dispatch({\n      type: \"LOADING\"\n    });\n\n    try {\n      const data = await callback();\n      dispatch({\n        type: \"SUCCESS\",\n        data\n      });\n    } catch (e) {\n      dispatch({\n        type: \"ERROR\",\n        error: e\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchData(); // eslint 설정을 다음 줄에서만 비활성화\n    // eslint-disable-next-line\n  }, deps);\n  return [state, fetchData];\n}\n\n_s(useAsync, \"EAegQt+oTtX+imaJccJ/eOVieOw=\");\n\nexport default useAsync;","map":{"version":3,"names":["useReducer","useEffect","reducer","state","action","type","loading","data","error","Error","useAsync","callback","deps","dispatch","fetchData","e"],"sources":["/Users/kwak/Documents/공부/멋사/Likelion_hufs10th/api-integrate/src/useAsync.js"],"sourcesContent":["import { useReducer, useEffect } from \"react\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"LOADING\":\n      return {\n        loading: true,\n        data: null,\n        error: null,\n      };\n    case \"SUCCESS\":\n      return {\n        loading: false,\n        data: action.data,\n        error: null,\n      };\n    case \"ERROR\":\n      return {\n        loading: false,\n        data: null,\n        error: action.error,\n      };\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nfunction useAsync(callback, deps = []) {\n  const [state, dispatch] = useReducer(reducer, {\n    loading: false,\n    data: null,\n    error: false,\n  });\n\n  const fetchData = async () => {\n    dispatch({ type: \"LOADING\" });\n    try {\n      const data = await callback();\n      dispatch({ type: \"SUCCESS\", data });\n    } catch (e) {\n      dispatch({ type: \"ERROR\", error: e });\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n    // eslint 설정을 다음 줄에서만 비활성화\n    // eslint-disable-next-line\n  }, deps);\n\n  return [state, fetchData];\n}\n\nexport default useAsync;\n"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;EAC9B,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,SAAL;MACE,OAAO;QACLC,OAAO,EAAE,IADJ;QAELC,IAAI,EAAE,IAFD;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAKF,KAAK,SAAL;MACE,OAAO;QACLF,OAAO,EAAE,KADJ;QAELC,IAAI,EAAEH,MAAM,CAACG,IAFR;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAKF,KAAK,OAAL;MACE,OAAO;QACLF,OAAO,EAAE,KADJ;QAELC,IAAI,EAAE,IAFD;QAGLC,KAAK,EAAEJ,MAAM,CAACI;MAHT,CAAP;;IAKF;MACE,MAAM,IAAIC,KAAJ,CAAW,0BAAyBL,MAAM,CAACC,IAAK,EAAhD,CAAN;EApBJ;AAsBD;;AAED,SAASK,QAAT,CAAkBC,QAAlB,EAAuC;EAAA;;EAAA,IAAXC,IAAW,uEAAJ,EAAI;EACrC,MAAM,CAACT,KAAD,EAAQU,QAAR,IAAoBb,UAAU,CAACE,OAAD,EAAU;IAC5CI,OAAO,EAAE,KADmC;IAE5CC,IAAI,EAAE,IAFsC;IAG5CC,KAAK,EAAE;EAHqC,CAAV,CAApC;;EAMA,MAAMM,SAAS,GAAG,YAAY;IAC5BD,QAAQ,CAAC;MAAER,IAAI,EAAE;IAAR,CAAD,CAAR;;IACA,IAAI;MACF,MAAME,IAAI,GAAG,MAAMI,QAAQ,EAA3B;MACAE,QAAQ,CAAC;QAAER,IAAI,EAAE,SAAR;QAAmBE;MAAnB,CAAD,CAAR;IACD,CAHD,CAGE,OAAOQ,CAAP,EAAU;MACVF,QAAQ,CAAC;QAAER,IAAI,EAAE,OAAR;QAAiBG,KAAK,EAAEO;MAAxB,CAAD,CAAR;IACD;EACF,CARD;;EAUAd,SAAS,CAAC,MAAM;IACda,SAAS,GADK,CAEd;IACA;EACD,CAJQ,EAINF,IAJM,CAAT;EAMA,OAAO,CAACT,KAAD,EAAQW,SAAR,CAAP;AACD;;GAxBQJ,Q;;AA0BT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}