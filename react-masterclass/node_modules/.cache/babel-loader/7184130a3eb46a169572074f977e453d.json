{"ast":null,"code":"var _jsxFileName = \"/Users/kwak/Documents/study/\\u1106\\u1165\\u11BA\\u1109\\u1161/Likelion_hufs10th/react-masterclass/src/components/DraggableCard.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { toDosState } from \"../atom\";\nimport { MaterialIcon } from \"./Board\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 0.2rem;\n  width: 2rem;\n  height: 2rem;\n  transition: opacity 0.3s, background-color 0.3s, color 0.3s;\n  cursor: pointer;\n  color: ${props => props.theme.secondaryTextColor};\n  background-color: transparent;\n  border: none;\n  font-size: 1.2rem;\n\n  &:hover,\n  &:active,\n  &:focus-within {\n    background-color: ${props => props.theme.hoverButtonOverlayColor};\n  }\n`;\n_c = Button;\nconst Buttons = styled.div`\n  display: flex;\n  position: absolute;\n  top: calc(50% - 1rem);\n  right: 0.375rem;\n  justify-content: space-between;\n  gap: 0.125rem;\n`;\n_c2 = Buttons;\nconst Card = styled.li`\n  background-color: ${props => props.theme.cardColor};\n  padding: 0.8rem;\n  border-radius: 0.4rem;\n  box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.15);\n  margin-bottom: 0.6rem;\n  height: 2.75rem;\n  display: block;\n  /* align-items: center;\n\tjustify-content: space-between; */\n  transition: background-color 0.3s, color 0.3s, box-shadow 0.3s, opacity 0.3s;\n  user-select: none;\n  position: relative;\n  font-size: 1rem;\n\n  &.dragging {\n    box-shadow: 0 0.4rem 0.8rem rgba(0, 0, 0, 0.25);\n  }\n\n  &.dragging-over-trash {\n    background-color: tomato !important;\n    color: white;\n  }\n\n  &:focus-within {\n    background-color: ${props => props.theme.accentColor};\n    outline: 0.15rem solid ${props => props.theme.textColor};\n    color: white;\n  }\n\n  & > :first-child {\n    width: 100%;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    transition: width 0.3s;\n    margin-top: 0.1rem;\n  }\n\n  &:not(:hover):not(:focus-within) ${Button} {\n    opacity: 0;\n  }\n\n  &:hover > :first-child,\n  &:focus-within > :first-child {\n    width: 8.75rem;\n  }\n\n  &:focus-within ${Button} {\n    color: white;\n  }\n\n  &:focus-within ${Button}:focus {\n    outline: 0.15rem solid white;\n  }\n`;\n_c3 = Card;\nfunction DraggableCard(_ref) {\n  _s();\n  let {\n    toDo,\n    index,\n    boardId\n  } = _ref;\n  const setToDos = useSetRecoilState(toDosState);\n  const onEdit = () => {\n    var _window$prompt;\n    const newToDoText = (_window$prompt = window.prompt(`${toDo.text} 할 일의 새 이름을 입력해주세요.`, toDo.text)) === null || _window$prompt === void 0 ? void 0 : _window$prompt.trim();\n    if (newToDoText !== null && newToDoText !== undefined) {\n      if (newToDoText === \"\") {\n        alert(\"이름을 입력해주세요.\");\n        return;\n      }\n      setToDos(prev => {\n        const toDosCopy = [...prev];\n        const boardIndex = toDosCopy.findIndex(board => board.id === boardId);\n        const boardCopy = {\n          ...toDosCopy[boardIndex]\n        };\n        const listCopy = [...boardCopy.toDos];\n        const toDoIndex = boardCopy.toDos.findIndex(td => td.id === toDo.id);\n        listCopy.splice(toDoIndex, 1, {\n          text: newToDoText,\n          id: toDo.id\n        });\n        boardCopy.toDos = listCopy;\n        toDosCopy.splice(boardIndex, 1, boardCopy);\n        return toDosCopy;\n      });\n    }\n  };\n  const onDelete = () => {\n    if (window.confirm(`${toDo.text} 할 일을 삭제하시겠습니까?`)) {\n      setToDos(prev => {\n        const toDosCopy = [...prev];\n        const boardIndex = toDosCopy.findIndex(board => board.id === boardId);\n        const boardCopy = {\n          ...toDosCopy[boardIndex]\n        };\n        const listCopy = [...boardCopy.toDos];\n        const toDoIndex = boardCopy.toDos.findIndex(td => td.id === toDo.id);\n        listCopy.splice(toDoIndex, 1);\n        boardCopy.toDos = listCopy;\n        toDosCopy.splice(boardIndex, 1, boardCopy);\n        return toDosCopy;\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: \"todo-\" + toDo.id,\n    index: index,\n    children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(Card, {\n      className: `${snapshot.isDragging ? \"dragging\" : \"\"} ${snapshot.draggingOver === \"trash\" ? \"dragging-over-trash\" : \"\"}`,\n      ref: provided.innerRef,\n      ...provided.draggableProps,\n      ...provided.dragHandleProps,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: toDo.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: onEdit,\n          children: /*#__PURE__*/_jsxDEV(MaterialIcon, {\n            name: \"edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onDelete,\n          children: /*#__PURE__*/_jsxDEV(MaterialIcon, {\n            name: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n\n// prevents re-rendering of the component\n_s(DraggableCard, \"BR93yBPF8CYIHT/jsK8zidf9OVI=\", false, function () {\n  return [useSetRecoilState];\n});\n_c4 = DraggableCard;\nexport default _c5 = /*#__PURE__*/React.memo(DraggableCard);\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Buttons\");\n$RefreshReg$(_c3, \"Card\");\n$RefreshReg$(_c4, \"DraggableCard\");\n$RefreshReg$(_c5, \"%default%\");","map":{"version":3,"names":["React","Draggable","useSetRecoilState","styled","toDosState","MaterialIcon","Button","button","props","theme","secondaryTextColor","hoverButtonOverlayColor","Buttons","div","Card","li","cardColor","accentColor","textColor","DraggableCard","toDo","index","boardId","setToDos","onEdit","newToDoText","window","prompt","text","trim","undefined","alert","prev","toDosCopy","boardIndex","findIndex","board","id","boardCopy","listCopy","toDos","toDoIndex","td","splice","onDelete","confirm","provided","snapshot","isDragging","draggingOver","innerRef","draggableProps","dragHandleProps","memo"],"sources":["/Users/kwak/Documents/study/멋사/Likelion_hufs10th/react-masterclass/src/components/DraggableCard.tsx"],"sourcesContent":["import React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { IToDo, toDosState } from \"../atom\";\nimport { MaterialIcon } from \"./Board\";\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 0.2rem;\n  width: 2rem;\n  height: 2rem;\n  transition: opacity 0.3s, background-color 0.3s, color 0.3s;\n  cursor: pointer;\n  color: ${(props) => props.theme.secondaryTextColor};\n  background-color: transparent;\n  border: none;\n  font-size: 1.2rem;\n\n  &:hover,\n  &:active,\n  &:focus-within {\n    background-color: ${(props) => props.theme.hoverButtonOverlayColor};\n  }\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  position: absolute;\n  top: calc(50% - 1rem);\n  right: 0.375rem;\n  justify-content: space-between;\n  gap: 0.125rem;\n`;\n\nconst Card = styled.li`\n  background-color: ${(props) => props.theme.cardColor};\n  padding: 0.8rem;\n  border-radius: 0.4rem;\n  box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.15);\n  margin-bottom: 0.6rem;\n  height: 2.75rem;\n  display: block;\n  /* align-items: center;\n\tjustify-content: space-between; */\n  transition: background-color 0.3s, color 0.3s, box-shadow 0.3s, opacity 0.3s;\n  user-select: none;\n  position: relative;\n  font-size: 1rem;\n\n  &.dragging {\n    box-shadow: 0 0.4rem 0.8rem rgba(0, 0, 0, 0.25);\n  }\n\n  &.dragging-over-trash {\n    background-color: tomato !important;\n    color: white;\n  }\n\n  &:focus-within {\n    background-color: ${(props) => props.theme.accentColor};\n    outline: 0.15rem solid ${(props) => props.theme.textColor};\n    color: white;\n  }\n\n  & > :first-child {\n    width: 100%;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    transition: width 0.3s;\n    margin-top: 0.1rem;\n  }\n\n  &:not(:hover):not(:focus-within) ${Button} {\n    opacity: 0;\n  }\n\n  &:hover > :first-child,\n  &:focus-within > :first-child {\n    width: 8.75rem;\n  }\n\n  &:focus-within ${Button} {\n    color: white;\n  }\n\n  &:focus-within ${Button}:focus {\n    outline: 0.15rem solid white;\n  }\n`;\n\ninterface IDraggableCardProps {\n  toDo: IToDo;\n  index: number;\n  boardId: number;\n}\n\nfunction DraggableCard({ toDo, index, boardId }: IDraggableCardProps) {\n  const setToDos = useSetRecoilState(toDosState);\n\n  const onEdit = () => {\n    const newToDoText = window\n      .prompt(`${toDo.text} 할 일의 새 이름을 입력해주세요.`, toDo.text)\n      ?.trim();\n\n    if (newToDoText !== null && newToDoText !== undefined) {\n      if (newToDoText === \"\") {\n        alert(\"이름을 입력해주세요.\");\n        return;\n      }\n\n      setToDos((prev) => {\n        const toDosCopy = [...prev];\n        const boardIndex = toDosCopy.findIndex((board) => board.id === boardId);\n        const boardCopy = { ...toDosCopy[boardIndex] };\n        const listCopy = [...boardCopy.toDos];\n        const toDoIndex = boardCopy.toDos.findIndex((td) => td.id === toDo.id);\n\n        listCopy.splice(toDoIndex, 1, {\n          text: newToDoText,\n          id: toDo.id,\n        });\n\n        boardCopy.toDos = listCopy;\n        toDosCopy.splice(boardIndex, 1, boardCopy);\n\n        return toDosCopy;\n      });\n    }\n  };\n\n  const onDelete = () => {\n    if (window.confirm(`${toDo.text} 할 일을 삭제하시겠습니까?`)) {\n      setToDos((prev) => {\n        const toDosCopy = [...prev];\n        const boardIndex = toDosCopy.findIndex((board) => board.id === boardId);\n        const boardCopy = { ...toDosCopy[boardIndex] };\n        const listCopy = [...boardCopy.toDos];\n        const toDoIndex = boardCopy.toDos.findIndex((td) => td.id === toDo.id);\n\n        listCopy.splice(toDoIndex, 1);\n        boardCopy.toDos = listCopy;\n        toDosCopy.splice(boardIndex, 1, boardCopy);\n\n        return toDosCopy;\n      });\n    }\n  };\n\n  return (\n    <Draggable draggableId={\"todo-\" + toDo.id} index={index}>\n      {(provided, snapshot) => (\n        <Card\n          className={`${snapshot.isDragging ? \"dragging\" : \"\"} ${\n            snapshot.draggingOver === \"trash\" ? \"dragging-over-trash\" : \"\"\n          }`}\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <div>{toDo.text}</div>\n          <Buttons>\n            <Button onClick={onEdit}>\n              <MaterialIcon name=\"edit\" />\n            </Button>\n            <Button onClick={onDelete}>\n              <MaterialIcon name=\"delete\" />\n            </Button>\n          </Buttons>\n        </Card>\n      )}\n    </Draggable>\n  );\n}\n\n// prevents re-rendering of the component\nexport default React.memo(DraggableCard);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}