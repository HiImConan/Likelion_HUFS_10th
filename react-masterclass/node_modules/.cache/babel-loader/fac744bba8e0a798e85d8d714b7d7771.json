{"ast":null,"code":"import { atom } from \"recoil\";\nconst instanceOfToDo = object => {\n  return object.constructor === Object && \"id\" in object && \"text\" in object && typeof object.id === \"number\" && typeof object.text === \"string\";\n};\nconst instanceOfBoard = object => {\n  return object.constructor === Object && \"id\" in object && \"title\" in object && \"toDos\" in object && typeof object.id === \"number\" && typeof object.title === \"string\" && object.toDos.every(toDo => instanceOfToDo(toDo));\n};\nconst instanceOfBoards = object => {\n  return Array.isArray(object) && object.every(board => instanceOfBoard(board));\n};\nconst localStorageEffect = key => _ref => {\n  let {\n    setSelf,\n    onSet\n  } = _ref;\n  const data = localStorage.getItem(key);\n  if (data !== null && data !== undefined) {\n    const json = raw => {\n      try {\n        return JSON.parse(raw);\n      } catch (error) {\n        return false;\n      }\n    };\n    if (json(data) && instanceOfBoards(json(data))) {\n      setSelf(json(data));\n    }\n  }\n  onSet(newValue => {\n    localStorage.setItem(key, JSON.stringify(newValue));\n  });\n};\nexport const toDosState = atom({\n  key: \"toDos\",\n  default: [{\n    title: \"해야 함\",\n    id: 0,\n    toDos: [{\n      text: \"투두리스트 클론 끝내기\",\n      id: 0\n    }, {\n      text: \"내일 학교 갈 준비하기\",\n      id: 1\n    }]\n  }, {\n    title: \"하는 중\",\n    id: 1,\n    toDos: []\n  }, {\n    title: \"완료\",\n    id: 2,\n    toDos: [{\n      text: \"하루 4끼 먹기\",\n      id: 2\n    }, {\n      text: \"공부하기\",\n      id: 3\n    }]\n  }],\n  effects: [localStorageEffect(\"trello-clone-todos\")]\n});\nexport const isLightState = atom({\n  key: \"isLight\",\n  default: window.matchMedia(\"(prefers-color-scheme: light)\").matches ? true : false\n});","map":{"version":3,"names":["atom","instanceOfToDo","object","constructor","Object","id","text","instanceOfBoard","title","toDos","every","toDo","instanceOfBoards","Array","isArray","board","localStorageEffect","key","setSelf","onSet","data","localStorage","getItem","undefined","json","raw","JSON","parse","error","newValue","setItem","stringify","toDosState","default","effects","isLightState","window","matchMedia","matches"],"sources":["/Users/kwak/Documents/study/멋사/Likelion_hufs10th/react-masterclass/src/atom.ts"],"sourcesContent":["import { atom } from \"recoil\";\n\nexport interface IToDo {\n  id: number;\n  text: string;\n}\n\nexport interface IBoard {\n  id: number;\n  title: string;\n  toDos: IToDo[];\n}\n\nconst instanceOfToDo = (object: any): object is IToDo => {\n  return (\n    object.constructor === Object &&\n    \"id\" in object &&\n    \"text\" in object &&\n    typeof (object as IToDo).id === \"number\" &&\n    typeof (object as IToDo).text === \"string\"\n  );\n};\n\nconst instanceOfBoard = (object: any): object is IBoard[] => {\n  return (\n    object.constructor === Object &&\n    \"id\" in object &&\n    \"title\" in object &&\n    \"toDos\" in object &&\n    typeof (object as IBoard).id === \"number\" &&\n    typeof (object as IBoard).title === \"string\" &&\n    (object as IBoard).toDos.every((toDo) => instanceOfToDo(toDo))\n  );\n};\n\nconst instanceOfBoards = (object: any): object is IBoard[] => {\n  return (\n    Array.isArray(object) &&\n    (object as IBoard[]).every((board) => instanceOfBoard(board))\n  );\n};\n\nconst localStorageEffect =\n  (key: string) =>\n  ({ setSelf, onSet }: any) => {\n    const data = localStorage.getItem(key);\n\n    if (data !== null && data !== undefined) {\n      const json = (raw: string) => {\n        try {\n          return JSON.parse(raw);\n        } catch (error) {\n          return false;\n        }\n      };\n\n      if (json(data) && instanceOfBoards(json(data))) {\n        setSelf(json(data));\n      }\n    }\n\n    onSet((newValue: IBoard[]) => {\n      localStorage.setItem(key, JSON.stringify(newValue));\n    });\n  };\n\nexport const toDosState = atom<IBoard[]>({\n  key: \"toDos\",\n  default: [\n    {\n      title: \"해야 함\",\n      id: 0,\n      toDos: [\n        { text: \"투두리스트 클론 끝내기\", id: 0 },\n        { text: \"내일 학교 갈 준비하기\", id: 1 },\n      ],\n    },\n    {\n      title: \"하는 중\",\n      id: 1,\n      toDos: [],\n    },\n    {\n      title: \"완료\",\n      id: 2,\n      toDos: [\n        { text: \"하루 4끼 먹기\", id: 2 },\n        { text: \"공부하기\", id: 3 },\n      ],\n    },\n  ],\n  effects: [localStorageEffect(\"trello-clone-todos\")],\n});\n\nexport const isLightState = atom<boolean>({\n  key: \"isLight\",\n  default: window.matchMedia(\"(prefers-color-scheme: light)\").matches\n    ? true\n    : false,\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}