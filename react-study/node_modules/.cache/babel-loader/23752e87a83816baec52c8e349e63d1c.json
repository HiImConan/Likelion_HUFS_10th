{"ast":null,"code":"var _jsxFileName = \"/Users/kwak/Documents/\\u1100\\u1169\\u11BC\\u1107\\u116E/\\u1106\\u1165\\u11BA\\u1109\\u1161/Likelion_hufs10th/react-study/src/ShowPostList.jsx\",\n    _s = $RefreshSig$();\n\nimport { CursorDiv, LoadingDiv, LoadingImg, PagenumberDiv, PagingSection, PostListDiv, PostSection, PostTitle, PostTitleDiv } from \"./styledComponent\";\nimport { faArrowLeft, faArrowRight, faArrowsRotate, faPenToSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport EachPost from \"./EachPost\";\nimport { React, useState, useEffect, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ShowPostList(_ref) {\n  _s();\n\n  let {\n    apiUrl\n  } = _ref;\n  const [loading, setLoading] = useState(true);\n  const [postList, setPostList] = useState([]);\n  const [page, setPage] = useState(1);\n  const [pages, setPages] = useState([]);\n  const [isFinalPage, setIsFinalPage] = useState();\n  const [isFirstPage, setIsFirstPage] = useState();\n  const getPostList = useCallback(() => {\n    setLoading(true);\n    axios.get(`${apiUrl}list/?page=${page}&page_size=10`).then(response => {\n      // 실제 api data 안에 담긴 페이지 수만큼 보이게 하는 작업\n      const lastPage = Math.ceil(response.data.count / 10); // data.count를 10으로 나누고 올림하면 마지막 페이지 수\n\n      const tempPages = []; // setPages에 들어갈 배열 껍데기\n\n      for (let i = 1; i <= lastPage; i++) {\n        tempPages.push(i); // map함수를 사용해 껍데기 배열에 숫자 차례대로 푸쉬\n      }\n\n      setPages(tempPages); // update pages state\n\n      setPostList(response.data.results);\n      setLoading(false);\n      setIsFinalPage(response.data.next);\n      setIsFirstPage(response.data.previous);\n    });\n  });\n  useEffect(getPostList, [page]); // 사용자가 선택하는 페이지가 달라질 때마다 바뀌게 함\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PostSection, {\n      children: [/*#__PURE__*/_jsxDEV(PostTitleDiv, {\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          onClick: getPostList,\n          icon: faArrowsRotate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PostTitle, {\n          children: \"\\uC775\\uBA85\\uAC8C\\uC2DC\\uD310\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CursorDiv, {\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            onClick: goWrite,\n            icon: faPenToSquare\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostListDiv, {\n        children: loading ? /*#__PURE__*/_jsxDEV(LoadingDiv, {\n          children: /*#__PURE__*/_jsxDEV(LoadingImg, {\n            src: \"./loading.svg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this) : postList.length === 0 ? /*#__PURE__*/_jsxDEV(LoadingDiv, {\n          children: \"\\uC544\\uC9C1 \\uAE30\\uB85D\\uB41C \\uAE00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: postList.map(element => /*#__PURE__*/_jsxDEV(EachPost, {\n            title: element.title,\n            postID: element.id\n          }, element.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PagingSection, {\n      children: [isFirstPage ? /*#__PURE__*/_jsxDEV(PagenumberDiv, {\n        onClick: () => {\n          if (page > 1) setPage(page - 1);\n        },\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this) : \"\", pages.map(pageNum => /*#__PURE__*/_jsxDEV(PagenumberDiv, {\n        onClick: () => setPage(pageNum),\n        children: pageNum\n      }, pageNum, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)), isFinalPage ? /*#__PURE__*/_jsxDEV(PagenumberDiv, {\n        onClick: () => {\n          if (pages.length > page) setPage(page + 1);\n        },\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ShowPostList, \"mGA8KAt+F4RG8mMX1ukXPXLRYMw=\");\n\n_c = ShowPostList;\nexport default ShowPostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowPostList\");","map":{"version":3,"names":["CursorDiv","LoadingDiv","LoadingImg","PagenumberDiv","PagingSection","PostListDiv","PostSection","PostTitle","PostTitleDiv","faArrowLeft","faArrowRight","faArrowsRotate","faPenToSquare","FontAwesomeIcon","EachPost","React","useState","useEffect","useCallback","useNavigate","axios","ShowPostList","apiUrl","loading","setLoading","postList","setPostList","page","setPage","pages","setPages","isFinalPage","setIsFinalPage","isFirstPage","setIsFirstPage","getPostList","get","then","response","lastPage","Math","ceil","data","count","tempPages","i","push","results","next","previous","goWrite","length","map","element","title","id","pageNum"],"sources":["/Users/kwak/Documents/공부/멋사/Likelion_hufs10th/react-study/src/ShowPostList.jsx"],"sourcesContent":["import {\n  CursorDiv,\n  LoadingDiv,\n  LoadingImg,\n  PagenumberDiv,\n  PagingSection,\n  PostListDiv,\n  PostSection,\n  PostTitle,\n  PostTitleDiv,\n} from \"./styledComponent\";\n\nimport {\n  faArrowLeft,\n  faArrowRight,\n  faArrowsRotate,\n  faPenToSquare,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport EachPost from \"./EachPost\";\nimport { React, useState, useEffect, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction ShowPostList({ apiUrl }) {\n  const [loading, setLoading] = useState(true);\n  const [postList, setPostList] = useState([]);\n  const [page, setPage] = useState(1);\n  const [pages, setPages] = useState([]);\n  const [isFinalPage, setIsFinalPage] = useState();\n  const [isFirstPage, setIsFirstPage] = useState();\n\n  const getPostList = useCallback(() => {\n    setLoading(true);\n    axios.get(`${apiUrl}list/?page=${page}&page_size=10`).then((response) => {\n      // 실제 api data 안에 담긴 페이지 수만큼 보이게 하는 작업\n      const lastPage = Math.ceil(response.data.count / 10); // data.count를 10으로 나누고 올림하면 마지막 페이지 수\n      const tempPages = []; // setPages에 들어갈 배열 껍데기\n      for (let i = 1; i <= lastPage; i++) {\n        tempPages.push(i); // map함수를 사용해 껍데기 배열에 숫자 차례대로 푸쉬\n      }\n      setPages(tempPages); // update pages state\n\n      setPostList(response.data.results);\n      setLoading(false);\n\n      setIsFinalPage(response.data.next);\n      setIsFirstPage(response.data.previous);\n    });\n  });\n\n  useEffect(getPostList, [page]); // 사용자가 선택하는 페이지가 달라질 때마다 바뀌게 함\n\n  return (\n    <>\n      <PostSection>\n        <PostTitleDiv>\n          <FontAwesomeIcon onClick={getPostList} icon={faArrowsRotate} />\n          <PostTitle>익명게시판</PostTitle>\n          <CursorDiv>\n            <FontAwesomeIcon onClick={goWrite} icon={faPenToSquare} />\n          </CursorDiv>\n        </PostTitleDiv>\n        <PostListDiv>\n          {loading ? (\n            <LoadingDiv>\n              <LoadingImg src={\"./loading.svg\"} />\n            </LoadingDiv>\n          ) : postList.length === 0 ? (\n            <LoadingDiv>아직 기록된 글이 없습니다.</LoadingDiv>\n          ) : (\n            <ul>\n              {postList.map((element) => (\n                <EachPost\n                  key={element.id}\n                  title={element.title}\n                  postID={element.id}\n                />\n              ))}\n            </ul>\n          )}\n        </PostListDiv>\n      </PostSection>\n      <PagingSection>\n        {isFirstPage ? (\n          <PagenumberDiv\n            onClick={() => {\n              if (page > 1) setPage(page - 1);\n            }}\n          >\n            <FontAwesomeIcon icon={faArrowLeft} />\n          </PagenumberDiv>\n        ) : (\n          \"\"\n        )}\n\n        {pages.map((pageNum) => (\n          <PagenumberDiv key={pageNum} onClick={() => setPage(pageNum)}>\n            {pageNum}\n          </PagenumberDiv>\n        ))}\n\n        {isFinalPage ? (\n          <PagenumberDiv\n            onClick={() => {\n              if (pages.length > page) setPage(page + 1);\n            }}\n          >\n            <FontAwesomeIcon icon={faArrowRight} />\n          </PagenumberDiv>\n        ) : (\n          \"\"\n        )}\n      </PagingSection>\n    </>\n  );\n}\n\nexport default ShowPostList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}