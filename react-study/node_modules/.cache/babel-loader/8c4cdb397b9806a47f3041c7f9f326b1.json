{"ast":null,"code":"var _jsxFileName = \"/Users/kwak/Documents/\\u1100\\u1169\\u11BC\\u1107\\u116E/\\u1106\\u1165\\u11BA\\u1109\\u1161/Likelion_hufs10th/react-study/src/ShowPost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { LoadingDiv, LoadingImg, PostReadDiv, PostReplDiv, PostSection, PostTitle, PostTitleDiv, Repl, ReplInput, ReplSubmitDiv, ReplTitleDiv, Replwriter, WritereplDiv } from \"./styledComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst postData = {\n  title: \"어렵사리 정한 제목입니다.\",\n  contents: `내가 그때 그렇게 딱 했는데 보이는 사람은 너라는 것을 알게 되었어, 그게\n  나에게는 힘들었지만, 쉽내가 그때 그렇게 딱 했는데 보이는 사람은 너라는\n  것을 알게 되었어, 그게 나에게는 힘들었지만, 내가 그때 그렇게 딱 했는데\n  보이는 사람은 너라는 것을 알게 되었어, 그게 나에게는 힘들었지만, 지\n  않았던 만큼 더욱 성장할 수 있다는 것을 뼈저리게 느꼈지`\n};\nconst replData = [{\n  id: 2,\n  contents: `내가 생각해도 그건 아니다`\n}, {\n  id: 5,\n  contents: `그럴수도 있나?? 내가 생각해도 그건 아니다`\n}];\nconst PostAndRepl = /*#__PURE__*/React.memo(_c = _ref => {\n  let {\n    post,\n    postLoading,\n    replCount,\n    replLoading,\n    repls\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PostTitleDiv, {\n      children: /*#__PURE__*/_jsxDEV(PostTitle, {\n        children: post && post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), postLoading ? /*#__PURE__*/_jsxDEV(LoadingDiv, {\n      children: /*#__PURE__*/_jsxDEV(LoadingImg, {\n        src: `${process.env.PUBLIC_URL}/img/loading.svg`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(PostReadDiv, {\n      children: [post && post.contents, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ReplTitleDiv, {\n      children: [\"\\uB313\\uAE00 \", replCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), replLoading ? /*#__PURE__*/_jsxDEV(LoadingDiv, {\n      children: /*#__PURE__*/_jsxDEV(LoadingImg, {\n        src: `${process.env.PUBLIC_URL}/img/loading.svg`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this) : repls && repls.map(element => /*#__PURE__*/_jsxDEV(PostReplDiv, {\n      children: [/*#__PURE__*/_jsxDEV(Replwriter, {\n        children: \"\\uC775\\uBA85\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Repl, {\n        children: element.contents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }, this)]\n    }, element.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true);\n});\n_c2 = PostAndRepl;\n\nconst ShowPost = _ref2 => {\n  _s();\n\n  let {\n    apiUrl\n  } = _ref2;\n  // const Params = useParams();\n  const [post, setPost] = useState(null);\n  const [repls, setRepls] = useState([]);\n  const [postLoading, setPostLoading] = useState(true);\n  const [replLoading, setReplLoading] = useState(true);\n  useEffect(() => {\n    axios.get(`${apiUrl}posts/${Params.postID}`).then(response => {\n      console.log(response);\n    });\n  });\n  useEffect(() => {\n    setTimeout(() => {\n      setPost(postData);\n      setPostLoading(false); // replInput.current.focus(); useEffect안에 한꺼번에 합쳐도 됨.\n    }, 300);\n  }, []);\n  useEffect(() => {\n    setTimeout(() => {\n      setRepls(replData);\n      setReplLoading(false);\n    }, 1000);\n  }, []);\n  const [repl, setRepl] = useState(\"\");\n\n  const onChange = e => {\n    setRepl(e.target.value);\n  };\n\n  const countRepls = repls => {\n    console.log(\"리뷰 개수를 세는 중...\");\n    return repls.length;\n  }; // for useMemo\n\n\n  const replCount = useMemo(() => countRepls(repls), [repls]); // first cursor on page using useRef()\n\n  const replInput = useRef();\n  useEffect(() => {\n    replInput.current.focus();\n  }, []);\n  /*if (!Params.postID) {\n    return <PostSection>잘못된 접근입니다.</PostSection>;\n  }*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(PostSection, {\n      children: [/*#__PURE__*/_jsxDEV(PostAndRepl, {\n        post: post,\n        postLoading: postLoading,\n        replCount: replCount,\n        replLoading: replLoading,\n        repls: repls\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WritereplDiv, {\n        children: [/*#__PURE__*/_jsxDEV(ReplInput, {\n          onChange: onChange,\n          value: repl,\n          ref: replInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReplSubmitDiv, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uC785\\uB825\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShowPost, \"OwY6PpMev/rKAcYWXBmPwVBqfpE=\");\n\n_c3 = ShowPost;\nexport default ShowPost;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PostAndRepl$React.memo\");\n$RefreshReg$(_c2, \"PostAndRepl\");\n$RefreshReg$(_c3, \"ShowPost\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useRef","useParams","axios","LoadingDiv","LoadingImg","PostReadDiv","PostReplDiv","PostSection","PostTitle","PostTitleDiv","Repl","ReplInput","ReplSubmitDiv","ReplTitleDiv","Replwriter","WritereplDiv","postData","title","contents","replData","id","PostAndRepl","memo","post","postLoading","replCount","replLoading","repls","process","env","PUBLIC_URL","map","element","ShowPost","apiUrl","setPost","setRepls","setPostLoading","setReplLoading","get","Params","postID","then","response","console","log","setTimeout","repl","setRepl","onChange","e","target","value","countRepls","length","replInput","current","focus"],"sources":["/Users/kwak/Documents/공부/멋사/Likelion_hufs10th/react-study/src/ShowPost.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  LoadingDiv,\n  LoadingImg,\n  PostReadDiv,\n  PostReplDiv,\n  PostSection,\n  PostTitle,\n  PostTitleDiv,\n  Repl,\n  ReplInput,\n  ReplSubmitDiv,\n  ReplTitleDiv,\n  Replwriter,\n  WritereplDiv,\n} from \"./styledComponent\";\n\nconst postData = {\n  title: \"어렵사리 정한 제목입니다.\",\n  contents: `내가 그때 그렇게 딱 했는데 보이는 사람은 너라는 것을 알게 되었어, 그게\n  나에게는 힘들었지만, 쉽내가 그때 그렇게 딱 했는데 보이는 사람은 너라는\n  것을 알게 되었어, 그게 나에게는 힘들었지만, 내가 그때 그렇게 딱 했는데\n  보이는 사람은 너라는 것을 알게 되었어, 그게 나에게는 힘들었지만, 지\n  않았던 만큼 더욱 성장할 수 있다는 것을 뼈저리게 느꼈지`,\n};\n\nconst replData = [\n  {\n    id: 2,\n    contents: `내가 생각해도 그건 아니다`,\n  },\n  {\n    id: 5,\n    contents: `그럴수도 있나?? 내가 생각해도 그건 아니다`,\n  },\n];\n\nconst PostAndRepl = React.memo(\n  ({ post, postLoading, replCount, replLoading, repls }) => {\n    return (\n      <>\n        <PostTitleDiv>\n          <PostTitle>{post && post.title}</PostTitle>\n        </PostTitleDiv>\n\n        {postLoading ? (\n          <LoadingDiv>\n            <LoadingImg src={`${process.env.PUBLIC_URL}/img/loading.svg`} />\n          </LoadingDiv>\n        ) : (\n          <PostReadDiv>{post && post.contents} </PostReadDiv>\n        )}\n\n        {/* post contents */}\n\n        <ReplTitleDiv>댓글 {replCount}</ReplTitleDiv>\n        {replLoading ? (\n          <LoadingDiv>\n            <LoadingImg src={`${process.env.PUBLIC_URL}/img/loading.svg`} />\n          </LoadingDiv>\n        ) : (\n          repls &&\n          repls.map((element) => (\n            <PostReplDiv key={element.id}>\n              <Replwriter>익명</Replwriter>\n              <Repl>{element.contents}</Repl>\n            </PostReplDiv>\n          ))\n        )}\n      </>\n    );\n  }\n);\n\nconst ShowPost = ({ apiUrl }) => {\n  // const Params = useParams();\n  const [post, setPost] = useState(null);\n  const [repls, setRepls] = useState([]);\n  const [postLoading, setPostLoading] = useState(true);\n  const [replLoading, setReplLoading] = useState(true);\n\n  useEffect(() => {\n    axios.get(`${apiUrl}posts/${Params.postID}`).then((response) => {\n      console.log(response);\n    });\n  });\n\n  useEffect(() => {\n    setTimeout(() => {\n      setPost(postData);\n      setPostLoading(false);\n      // replInput.current.focus(); useEffect안에 한꺼번에 합쳐도 됨.\n    }, 300);\n  }, []);\n  useEffect(() => {\n    setTimeout(() => {\n      setRepls(replData);\n      setReplLoading(false);\n    }, 1000);\n  }, []);\n\n  const [repl, setRepl] = useState(\"\");\n\n  const onChange = (e) => {\n    setRepl(e.target.value);\n  };\n\n  const countRepls = (repls) => {\n    console.log(\"리뷰 개수를 세는 중...\");\n    return repls.length;\n  };\n\n  // for useMemo\n  const replCount = useMemo(() => countRepls(repls), [repls]);\n\n  // first cursor on page using useRef()\n  const replInput = useRef();\n\n  useEffect(() => {\n    replInput.current.focus();\n  }, []);\n\n  /*if (!Params.postID) {\n    return <PostSection>잘못된 접근입니다.</PostSection>;\n  }*/\n  return (\n    <div>\n      <PostSection>\n        <PostAndRepl\n          post={post}\n          postLoading={postLoading}\n          replCount={replCount}\n          replLoading={replLoading}\n          repls={repls}\n        />\n        <WritereplDiv>\n          <ReplInput\n            onChange={onChange}\n            value={repl}\n            ref={replInput}\n          ></ReplInput>\n          <ReplSubmitDiv>\n            <span>입력</span>\n          </ReplSubmitDiv>\n        </WritereplDiv>\n      </PostSection>\n    </div>\n  );\n};\n\nexport default ShowPost;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}